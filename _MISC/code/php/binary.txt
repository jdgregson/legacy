<?php

 // Corbin - 2011

 // Some functions for translating binary numbers
 // into decimal numbers. I think they're decimal
 // numbers. 'Regular' numbers... like '124.' 
 
 // NOTE: I wrote these on an iPod. They are all
 // untested, and mostly uncommented. 


$data = "00101100 00010110";
if (preg_match("/ /i", $data)) {
 removeChar($d = $data, $c = ' ');
}


function readBinary($d) {
$n = null;
 if (isset($d)) {
  $_d = str_split($d, 1);
  if (isset($_d[7])) {
   if ($_d[0] == '1') {$n = $n + 1;}
   if ($_d[1] == '1') {$n = $n + 2;}
   if ($_d[2] == '1') {$n = $n + 4;}
   if ($_d[3] == '1') {$n = $n + 8;}
   if ($_d[4] == '1') {$n = $n + 16;}
   if ($_d[5] == '1') {$n = $n + 32;}
   if ($_d[6] == '1') {$n = $n + 64;}
   if ($_d[7] == '1') {$n = $n + 128;}
   return $n;
  }
  else {
   die('readBinary(): Data does not contain 8 bits!');
  }
 }
 else {
  die('readBinary(): No data!');
 }
}

function charCount($d) {
 if (isset($d)) {
  $_d = str_split($d, 8);
  $n = 0;
  for($i = 1; isset($_d[$i]; $i++) {
   $n++;
  }
  // might need to drop this by one
  $n--;
  return $n;
 }
 else {
  die('charCount(): No data!');
 }
}

function removeChar($d, $c) {
 if (isset($d)) {
  if (isset($c)) {
   $_d = str_split($d, 1);
   for ($i = 0; isset($_d[$i]; $i++) {
    if ($_d[$i] == '$c') {
     // I don't know if this will work right
     unset($_d[$i]);
    }
   }
  }
  else {
   die('removeChar(): Character to remove not specified!');
  }
 }
 else {
  die('removeChar(): No data to process!');
 }
}

?>
